{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sandeep.m.k\\\\Desktop\\\\New folder\\\\client\\\\src\\\\context\\\\CartContext.js\",\n  _s = $RefreshSig$();\nimport React, { createContext, useReducer, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CartContext = /*#__PURE__*/createContext();\nconst cartReducer = (state, action) => {\n  switch (action.type) {\n    case 'SET_CART':\n      return {\n        ...state,\n        cartItems: action.payload\n      };\n    default:\n      return state;\n  }\n};\nexport const CartProvider = ({\n  children\n}) => {\n  _s();\n  const [state, dispatch] = useReducer(cartReducer, {\n    cartItems: []\n  });\n  const fetchCart = async () => {\n    try {\n      const token = localStorage.getItem('token');\n      if (token) {\n        const config = {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        };\n        const {\n          data\n        } = await axios.get('/api/cart', config);\n        dispatch({\n          type: 'SET_CART',\n          payload: data.cartItems\n        });\n      }\n    } catch (error) {\n      console.error('Failed to fetch cart', error);\n    }\n  };\n  useEffect(() => {\n    fetchCart();\n  }, []);\n  const addToCart = async (productId, qty) => {\n    try {\n      const token = localStorage.getItem('token');\n      const config = {\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: `Bearer ${token}`\n        }\n      };\n      const {\n        data\n      } = await axios.post('/api/cart', {\n        productId,\n        qty\n      }, config);\n      dispatch({\n        type: 'SET_CART',\n        payload: data.cartItems\n      });\n    } catch (error) {\n      console.error('Failed to add to cart', error);\n    }\n  };\n  const removeFromCart = async productId => {\n    try {\n      const token = localStorage.getItem('token');\n      const config = {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      };\n      const {\n        data\n      } = await axios.delete(`/api/cart/${productId}`, config);\n      dispatch({\n        type: 'SET_CART',\n        payload: data.cartItems\n      });\n    } catch (error) {\n      console.error('Failed to remove from cart', error);\n    }\n  };\n  const updateCartQuantity = async (productId, qty) => {\n    try {\n      const token = localStorage.getItem('token');\n      const config = {\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: `Bearer ${token}`\n        }\n      };\n      const {\n        data\n      } = await axios.put('/api/cart', {\n        productId,\n        qty\n      }, config);\n      dispatch({\n        type: 'SET_CART',\n        payload: data.cartItems\n      });\n    } catch (error) {\n      console.error('Failed to update cart quantity', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: {\n      cart: state,\n      addToCart,\n      removeFromCart,\n      updateCartQuantity\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 5\n  }, this);\n};\n_s(CartProvider, \"WKlAsVPd9c0mXRHJPSRfhRR/Ypg=\");\n_c = CartProvider;\nexport default CartContext;\nvar _c;\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"names":["React","createContext","useReducer","useEffect","axios","jsxDEV","_jsxDEV","CartContext","cartReducer","state","action","type","cartItems","payload","CartProvider","children","_s","dispatch","fetchCart","token","localStorage","getItem","config","headers","Authorization","data","get","error","console","addToCart","productId","qty","post","removeFromCart","delete","updateCartQuantity","put","Provider","value","cart","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/sandeep.m.k/Desktop/New folder/client/src/context/CartContext.js"],"sourcesContent":["import React, { createContext, useReducer, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst CartContext = createContext();\r\n\r\nconst cartReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case 'SET_CART':\r\n      return {\r\n        ...state,\r\n        cartItems: action.payload,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const CartProvider = ({ children }) => {\r\n  const [state, dispatch] = useReducer(cartReducer, { cartItems: [] });\r\n\r\n  const fetchCart = async () => {\r\n    try {\r\n      const token = localStorage.getItem('token');\r\n      if (token) {\r\n        const config = {\r\n          headers: {\r\n            Authorization: `Bearer ${token}`,\r\n          },\r\n        };\r\n        const { data } = await axios.get('/api/cart', config);\r\n        dispatch({ type: 'SET_CART', payload: data.cartItems });\r\n      }\r\n    } catch (error) {\r\n      console.error('Failed to fetch cart', error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchCart();\r\n  }, []);\r\n\r\n  const addToCart = async (productId, qty) => {\r\n    try {\r\n      const token = localStorage.getItem('token');\r\n      const config = {\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      };\r\n      const { data } = await axios.post('/api/cart', { productId, qty }, config);\r\n      dispatch({ type: 'SET_CART', payload: data.cartItems });\r\n    } catch (error) {\r\n      console.error('Failed to add to cart', error);\r\n    }\r\n  };\r\n\r\n  const removeFromCart = async (productId) => {\r\n    try {\r\n      const token = localStorage.getItem('token');\r\n      const config = {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      };\r\n      const { data } = await axios.delete(`/api/cart/${productId}`, config);\r\n      dispatch({ type: 'SET_CART', payload: data.cartItems });\r\n    } catch (error) {\r\n      console.error('Failed to remove from cart', error);\r\n    }\r\n  };\r\n\r\n  const updateCartQuantity = async (productId, qty) => {\r\n    try {\r\n      const token = localStorage.getItem('token');\r\n      const config = {\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      };\r\n      const { data } = await axios.put('/api/cart', { productId, qty }, config);\r\n      dispatch({ type: 'SET_CART', payload: data.cartItems });\r\n    } catch (error) {\r\n      console.error('Failed to update cart quantity', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <CartContext.Provider value={{ cart: state, addToCart, removeFromCart, updateCartQuantity }}>\r\n      {children}\r\n    </CartContext.Provider>\r\n  );\r\n};\r\n\r\nexport default CartContext;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,SAAS,QAAQ,OAAO;AACnE,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,WAAW,gBAAGN,aAAa,CAAC,CAAC;AAEnC,MAAMO,WAAW,GAAGA,CAACC,KAAK,EAAEC,MAAM,KAAK;EACrC,QAAQA,MAAM,CAACC,IAAI;IACjB,KAAK,UAAU;MACb,OAAO;QACL,GAAGF,KAAK;QACRG,SAAS,EAAEF,MAAM,CAACG;MACpB,CAAC;IACH;MACE,OAAOJ,KAAK;EAChB;AACF,CAAC;AAED,OAAO,MAAMK,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC5C,MAAM,CAACP,KAAK,EAAEQ,QAAQ,CAAC,GAAGf,UAAU,CAACM,WAAW,EAAE;IAAEI,SAAS,EAAE;EAAG,CAAC,CAAC;EAEpE,MAAMM,SAAS,GAAG,MAAAA,CAAA,KAAY;IAC5B,IAAI;MACF,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;MAC3C,IAAIF,KAAK,EAAE;QACT,MAAMG,MAAM,GAAG;UACbC,OAAO,EAAE;YACPC,aAAa,EAAE,UAAUL,KAAK;UAChC;QACF,CAAC;QACD,MAAM;UAAEM;QAAK,CAAC,GAAG,MAAMrB,KAAK,CAACsB,GAAG,CAAC,WAAW,EAAEJ,MAAM,CAAC;QACrDL,QAAQ,CAAC;UAAEN,IAAI,EAAE,UAAU;UAAEE,OAAO,EAAEY,IAAI,CAACb;QAAU,CAAC,CAAC;MACzD;IACF,CAAC,CAAC,OAAOe,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;IAC9C;EACF,CAAC;EAEDxB,SAAS,CAAC,MAAM;IACde,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMW,SAAS,GAAG,MAAAA,CAAOC,SAAS,EAAEC,GAAG,KAAK;IAC1C,IAAI;MACF,MAAMZ,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;MAC3C,MAAMC,MAAM,GAAG;QACbC,OAAO,EAAE;UACP,cAAc,EAAE,kBAAkB;UAClCC,aAAa,EAAE,UAAUL,KAAK;QAChC;MACF,CAAC;MACD,MAAM;QAAEM;MAAK,CAAC,GAAG,MAAMrB,KAAK,CAAC4B,IAAI,CAAC,WAAW,EAAE;QAAEF,SAAS;QAAEC;MAAI,CAAC,EAAET,MAAM,CAAC;MAC1EL,QAAQ,CAAC;QAAEN,IAAI,EAAE,UAAU;QAAEE,OAAO,EAAEY,IAAI,CAACb;MAAU,CAAC,CAAC;IACzD,CAAC,CAAC,OAAOe,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;IAC/C;EACF,CAAC;EAED,MAAMM,cAAc,GAAG,MAAOH,SAAS,IAAK;IAC1C,IAAI;MACF,MAAMX,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;MAC3C,MAAMC,MAAM,GAAG;QACbC,OAAO,EAAE;UACPC,aAAa,EAAE,UAAUL,KAAK;QAChC;MACF,CAAC;MACD,MAAM;QAAEM;MAAK,CAAC,GAAG,MAAMrB,KAAK,CAAC8B,MAAM,CAAC,aAAaJ,SAAS,EAAE,EAAER,MAAM,CAAC;MACrEL,QAAQ,CAAC;QAAEN,IAAI,EAAE,UAAU;QAAEE,OAAO,EAAEY,IAAI,CAACb;MAAU,CAAC,CAAC;IACzD,CAAC,CAAC,OAAOe,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;IACpD;EACF,CAAC;EAED,MAAMQ,kBAAkB,GAAG,MAAAA,CAAOL,SAAS,EAAEC,GAAG,KAAK;IACnD,IAAI;MACF,MAAMZ,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;MAC3C,MAAMC,MAAM,GAAG;QACbC,OAAO,EAAE;UACP,cAAc,EAAE,kBAAkB;UAClCC,aAAa,EAAE,UAAUL,KAAK;QAChC;MACF,CAAC;MACD,MAAM;QAAEM;MAAK,CAAC,GAAG,MAAMrB,KAAK,CAACgC,GAAG,CAAC,WAAW,EAAE;QAAEN,SAAS;QAAEC;MAAI,CAAC,EAAET,MAAM,CAAC;MACzEL,QAAQ,CAAC;QAAEN,IAAI,EAAE,UAAU;QAAEE,OAAO,EAAEY,IAAI,CAACb;MAAU,CAAC,CAAC;IACzD,CAAC,CAAC,OAAOe,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,gCAAgC,EAAEA,KAAK,CAAC;IACxD;EACF,CAAC;EAED,oBACErB,OAAA,CAACC,WAAW,CAAC8B,QAAQ;IAACC,KAAK,EAAE;MAAEC,IAAI,EAAE9B,KAAK;MAAEoB,SAAS;MAAEI,cAAc;MAAEE;IAAmB,CAAE;IAAApB,QAAA,EACzFA;EAAQ;IAAAyB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B,CAAC;AAAC3B,EAAA,CA5EWF,YAAY;AAAA8B,EAAA,GAAZ9B,YAAY;AA8EzB,eAAeP,WAAW;AAAC,IAAAqC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}