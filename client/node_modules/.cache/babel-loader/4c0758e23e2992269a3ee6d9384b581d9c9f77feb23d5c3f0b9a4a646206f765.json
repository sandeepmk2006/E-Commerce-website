{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sandeep.m.k\\\\Desktop\\\\New folder\\\\client\\\\src\\\\components\\\\auth\\\\Register.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Register = () => {\n  _s();\n  const [formData, setFormData] = useState({\n    email: '',\n    password: '',\n    password2: ''\n  });\n  const {\n    email,\n    password,\n    password2\n  } = formData;\n  const onChange = e => setFormData({\n    ...formData,\n    [e.target.name]: e.target.value\n  });\n  const onSubmit = async e => {\n    e.preventDefault();\n    if (password !== password2) {\n      console.log('Passwords do not match');\n    } else {\n      try {\n        const res = await axios.post('/api/auth/register', {\n          email,\n          password\n        });\n        console.log(res.data);\n      } catch (err) {\n        console.error(err.response.data);\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: onSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"email\",\n      name: \"email\",\n      value: email,\n      onChange: onChange,\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"password\",\n      name: \"password\",\n      value: password,\n      onChange: onChange,\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"password\",\n      name: \"password2\",\n      value: password2,\n      onChange: onChange,\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Register\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n_s(Register, \"g3h664Dty+56FqPcAHvJyzxfw3k=\");\n_c = Register;\nexport default Register;\nvar _c;\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","Register","_s","formData","setFormData","email","password","password2","onChange","e","target","name","value","onSubmit","preventDefault","console","log","res","post","data","err","error","response","children","type","required","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/sandeep.m.k/Desktop/New folder/client/src/components/auth/Register.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst Register = () => {\r\n  const [formData, setFormData] = useState({\r\n    email: '',\r\n    password: '',\r\n    password2: '',\r\n  });\r\n\r\n  const { email, password, password2 } = formData;\r\n\r\n  const onChange = (e) =>\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n\r\n  const onSubmit = async (e) => {\r\n    e.preventDefault();\r\n    if (password !== password2) {\r\n      console.log('Passwords do not match');\r\n    } else {\r\n      try {\r\n        const res = await axios.post('/api/auth/register', { email, password });\r\n        console.log(res.data);\r\n      } catch (err) {\r\n        console.error(err.response.data);\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={onSubmit}>\r\n      <input\r\n        type=\"email\"\r\n        name=\"email\"\r\n        value={email}\r\n        onChange={onChange}\r\n        required\r\n      />\r\n      <input\r\n        type=\"password\"\r\n        name=\"password\"\r\n        value={password}\r\n        onChange={onChange}\r\n        required\r\n      />\r\n      <input\r\n        type=\"password\"\r\n        name=\"password2\"\r\n        value={password2}\r\n        onChange={onChange}\r\n        required\r\n      />\r\n      <button type=\"submit\">Register</button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default Register;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGP,QAAQ,CAAC;IACvCQ,KAAK,EAAE,EAAE;IACTC,QAAQ,EAAE,EAAE;IACZC,SAAS,EAAE;EACb,CAAC,CAAC;EAEF,MAAM;IAAEF,KAAK;IAAEC,QAAQ;IAAEC;EAAU,CAAC,GAAGJ,QAAQ;EAE/C,MAAMK,QAAQ,GAAIC,CAAC,IACjBL,WAAW,CAAC;IAAE,GAAGD,QAAQ;IAAE,CAACM,CAAC,CAACC,MAAM,CAACC,IAAI,GAAGF,CAAC,CAACC,MAAM,CAACE;EAAM,CAAC,CAAC;EAE/D,MAAMC,QAAQ,GAAG,MAAOJ,CAAC,IAAK;IAC5BA,CAAC,CAACK,cAAc,CAAC,CAAC;IAClB,IAAIR,QAAQ,KAAKC,SAAS,EAAE;MAC1BQ,OAAO,CAACC,GAAG,CAAC,wBAAwB,CAAC;IACvC,CAAC,MAAM;MACL,IAAI;QACF,MAAMC,GAAG,GAAG,MAAMnB,KAAK,CAACoB,IAAI,CAAC,oBAAoB,EAAE;UAAEb,KAAK;UAAEC;QAAS,CAAC,CAAC;QACvES,OAAO,CAACC,GAAG,CAACC,GAAG,CAACE,IAAI,CAAC;MACvB,CAAC,CAAC,OAAOC,GAAG,EAAE;QACZL,OAAO,CAACM,KAAK,CAACD,GAAG,CAACE,QAAQ,CAACH,IAAI,CAAC;MAClC;IACF;EACF,CAAC;EAED,oBACEnB,OAAA;IAAMa,QAAQ,EAAEA,QAAS;IAAAU,QAAA,gBACvBvB,OAAA;MACEwB,IAAI,EAAC,OAAO;MACZb,IAAI,EAAC,OAAO;MACZC,KAAK,EAAEP,KAAM;MACbG,QAAQ,EAAEA,QAAS;MACnBiB,QAAQ;IAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACT,CAAC,eACF7B,OAAA;MACEwB,IAAI,EAAC,UAAU;MACfb,IAAI,EAAC,UAAU;MACfC,KAAK,EAAEN,QAAS;MAChBE,QAAQ,EAAEA,QAAS;MACnBiB,QAAQ;IAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACT,CAAC,eACF7B,OAAA;MACEwB,IAAI,EAAC,UAAU;MACfb,IAAI,EAAC,WAAW;MAChBC,KAAK,EAAEL,SAAU;MACjBC,QAAQ,EAAEA,QAAS;MACnBiB,QAAQ;IAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACT,CAAC,eACF7B,OAAA;MAAQwB,IAAI,EAAC,QAAQ;MAAAD,QAAA,EAAC;IAAQ;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACnC,CAAC;AAEX,CAAC;AAAC3B,EAAA,CApDID,QAAQ;AAAA6B,EAAA,GAAR7B,QAAQ;AAsDd,eAAeA,QAAQ;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}